girafe(ggobj = gr)
library(ggiraph)
gr<-ggplot(soil.24, aes(x=P, fill = FieldName)) +
geom_histogram(binwidth = 5) +
labs(x = "P (mg/L)", y = "Freq") +
ggtitle("Histogram of P (mg/L) in 2024")+
theme_bw()
girafe(ggobj = gr)
library(plotly)
gr<-ggplot(soil.24, aes(x=P, fill = FieldName)) +
geom_histogram(binwidth = 5) +
labs(x = "P (mg/L)", y = "Freq") +
ggtitle("Histogram of P (mg/L) in 2024")+
theme_bw()
ggplotly(gr)
library(plotly)
gr<-ggplot(soil.24, aes(x=P, fill = FieldName)) +
geom_histogram(binwidth = 5) +
labs(x = "P (mg/L)", y = "Freq") +
ggtitle("Histogram of P (mg/L) in 2024")+
theme_bw()+
theme(legend.position="none")
ggplotly(gr)
#structure(honey.data)
dplyr::glimpse(soil.24)
summary(soil.24)
View(soil.24)
P.mean <- sapply(soil.24, mean)
P.mean
soil.traits <- soil.24[,6:9]
rownames(soil.traits)<-soil.24[,1]
View(soil.traits)
P.mean <- sapply(soil.traits, mean)
P.mean
P.mean <- sapply(soil.traits, mean)
round(P.mean, digits=2)
P.mean <- sapply(soil.traits, mean)
round(P.mean, digits=1)
soil.var <-sapply(soil.traits, var)
round(soil.var, digits=1)
soil.sd <-sapply(soil.traits, sd)
round(soil.sd, digits=1)
soil.rsd <- soil.sd/soil.mean
soil.mean <- sapply(soil.traits, mean)
round(soil.mean, digits=1)
soil.rsd <- soil.sd/soil.mean
round(soil.rsd, digits=1)
soil.rsd <- soil.sd/soil.mean
round(soil.rsd, digits=2)
soil.var <-sapply(soil.traits, var)
round(soil.var, digits=1)
soil.sd <-sapply(soil.traits, sd)
round(soil.sd, digits=1)
soil.rsd <- soil.sd/soil.mean
round(soil.rsd, digits=2)
#meadow.honey <- dplyr::filter(honey.data, honey_type == "meadow")
#uni.honey <- dplyr::filter(honey.data, honey_type == "unifloral")
ttest1 <-t.test(soil.24$P[Field.ID==1], soil.24$P[Field.ID==5])
View(soil.24)
soil.24$P[Field.ID==1]
soil.24[Field.ID==1]$P
soil.24[Field.ID==1]
soil.24[Field.ID]
soil.24$Field.ID
soil.24[,Field.ID]
filter(soil.24, Field.ID==1)
filter(soil.24, Field.ID==1)$P
#meadow.honey <- dplyr::filter(honey.data, honey_type == "meadow")
#uni.honey <- dplyr::filter(honey.data, honey_type == "unifloral")
ttest1 <-t.test(filter(soil.24, Field.ID==1)$P, filter(soil.24, Field.ID==6)$P)
print(ttest1)
ttest2 <-t.test(filter(soil.24, Field.ID==1)$K, filter(soil.24, Field.ID==6)$K)
print(ttest2)
ggplot(data = soil.24, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ FIeld.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
ggplot(data = soil.24, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
pwr.t.test(d=0.50,power = 0.75, sig.level=.05,type = "two.sample", alternative="two.sided")
pwr.t.test(d=0.3,power = 0.75, sig.level=.05,type = "two.sample", alternative="two.sided")
pwr.t.test(d=0.50,power = 0.75, sig.level=.05,type = "two.sample", alternative="two.sided")
pwr.t.test(d=0.50,power = 0.7, sig.level=.05,type = "two.sample", alternative="two.sided")
pwr.t.test(d=0.25,power = 0.7, sig.level=.05,type = "two.sample", alternative="two.sided")
pwr.t.test(d=0.8,power = 0.7, sig.level=.05,type = "two.sample", alternative="two.sided")
one.anova <- aov(P ~ Field.ID, data = soil.24)
anova(one.anova)
one.anova <- aov(P ~ FieldName, data = soil.24)
anova(one.anova)
shapiro.test(rstandard(one.anova))
## Draw QQ plot
plot(one.anova, 2)
shapiro.test(rstandard(one.anova))
library(car)
leveneTest(P~as.factor(Field.ID),data=soil.24)
## Draw Fitted values vs Residuals plot
plot(one.anova, 1)
## Draw QQ plot
plot(one.anova, 2)
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24)
anova(one.anova)
## Draw QQ plot
plot(one.anova, 2)
## Draw QQ plot
plot(one.anova, 2)
## Draw QQ plot
plot(one.anova, 2)
shapiro.test(rstandard(one.anova))
## Draw Fitted values vs Residuals plot
plot(one.anova, 1)
library(car)
leveneTest(P~as.factor(Field.ID),data=soil.24)
## Draw QQ plot
plot(one.anova, 2)
soil.24.rm <-soil.24[-c(21, 234, 238),]
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm)
anova(one.anova)
## Draw QQ plot
plot(one.anova, 2)
shapiro.test(rstandard(one.anova))
## Draw Fitted values vs Residuals plot
plot(one.anova, 1)
library(car)
leveneTest(P~as.factor(Field.ID),data=soil.24)
TukeyHSD(one.anova)
ggplot(data = soil.24, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
soil.24.rm <-soil.24[-c(21, 234, 238),]
soil.24.rm1 <-filter(soil.24, Field.ID!=15 | Field.ID!=16 | Field.ID!=29)
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm)
ggplot(data = soil.24rm1, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
#soil.24.rm <-soil.24[-c(21, 234, 238),]
soil.24.rm <-filter(soil.24, Field.ID!=15 | Field.ID!=16 | Field.ID!=29)
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm)
ggplot(data = soil.24rm, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
ggplot(data = soil.24.rm, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
#soil.24.rm <-soil.24[-c(21, 234, 238),]
soil.24.rm <-filter(soil.24, Field.ID!=15)
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm)
ggplot(data = soil.24.rm, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
#soil.24.rm <-soil.24[-c(21, 234, 238),]
soil.24.rm <-filter(soil.24, Field.ID!=15 & Field.ID!=16 )
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm)
ggplot(data = soil.24.rm, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
#soil.24.rm <-soil.24[-c(21, 234, 238),]
soil.24.rm <-filter(soil.24, Field.ID!=15 & Field.ID!=16 & Field.ID!=29  )
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm)
ggplot(data = soil.24.rm, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
anova(one.anova)
## Draw QQ plot
plot(one.anova, 2)
soil.24.rm1 <-soil.24.rm[-c(21, 234, 238),]
one.anova1 <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm1)
anova(one.anova1)
anova(one.anova1)
## Draw QQ plot
plot(one.anova)
plot(one.anova, 2)
soil.24.rm1 <-soil.24.rm[-c(21, 230, 234),]
one.anova1 <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm1)
anova(one.anova1)
## Draw QQ plot
plot(one.anova, 2)
anova(one.anova1)
## Draw QQ plot
plot(one.anova1, 2)
anova(one.anova1)
## Draw QQ plot
plot(one.anova1, 2)
shapiro.test(rstandard(one.anova1))
## Draw Fitted values vs Residuals plot
plot(one.anova, 1)
## Draw Fitted values vs Residuals plot
plot(one.anova1, 1)
library(car)
leveneTest(P~as.factor(Field.ID),data=soil.24.rm1)
TukeyHSD(one.anova1)
soil.data %>% mutate_at(c('FieldName', 'Field.ID'), as.factor)
#structure(honey.data)
dplyr::glimpse(soil.data)
soil.data <- read.csv("Data/Stubton_Farm_Soil.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
#structure(honey.data)
dplyr::glimpse(soil.data)
soil.data %>% mutate_at(c('FieldName', 'Field.ID'), as.factor)
#structure(honey.data)
dplyr::glimpse(soil.data)
soil.data <-soil.data %>% mutate_at(c('FieldName', 'Field.ID'), as.factor)
#structure(honey.data)
dplyr::glimpse(soil.data)
knitr::kable(soil.data[1:5,], caption = "Head of Stubton Farm soil data")
# is.na() will return a logical matrix with the value "TRUE" for every "NA" in our dataset, and FALSE for any other value.
# table() will then return how any "TRUE" and "FALSE" we have in our matrix.
na_matrix <- is.na(soil.data)
table(na_matrix)
# This will select rows with complete values:
soil_complete <- soil.data[complete.cases(soil.data), ]
# Alternatively we may want to select the rows with missing values. In this case we can use the sympbol "!" which acts as a negation.  So, the next line will select rows with no complete cases:
soil_missing <- soil.data[!complete.cases(soil.data), ]
knitr::kable(soil_missing, caption = "Rows with missing values from the Vanilla dataset")
#Create a histogram for P
hist(soil_complete$P, main = "Histogram of the P concentration",
xlab = "P (mg/L)", ylab = "Freq", col = "steelblue")
#Order the P soil concentrations in descending order and show the top values:
ordered_P <- soil_complete[order(soil_complete$P, decreasing = TRUE),]
knitr::kable(ordered_P[1:10,], caption = "Highest P concentrations")
#Create a smaller dataframe with only the North, Cow and Grahams fields.
Top.fields<- filter(soil_complete, FieldName=="North Field" | FieldName=="Cow Field" | FieldName=="Grahams Field")
#Create a boxplot
Top.fields%>%
ggplot( aes(x=FieldName, y=P, fill=FieldName)) +
geom_boxplot() +
geom_jitter(color="black", size=0.4, alpha=0.9) +
stat_summary(fun = mean,
geom = "point",
shape = 18,
color = "red",
size = 3) +
theme_bw() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Top P concentration Fields ") +
xlab("")
soil_filtered <- soil_complete[soil_complete$Sample.ID != "S646",]
hist(x = soil_filtered$P, main = "Histogram of the filtered P values",
xlab = "P (mg/L)", ylab = "Freq", col = "steelblue")
if(!require('outliers')) install.packages('outliers'); library('outliers')
grubbs.test(soil_complete$P)
soil.24 <- dplyr::filter(soil_complete, Year==2024)
ggplot(soil.24, aes(x=P, fill = FieldName)) +
geom_histogram(binwidth = 5) +
labs(x = "P (mg/L)", y = "Freq") +
ggtitle("Histogram of P (mg/L) in 2024")+
theme_bw()+
theme(legend.position="none") #This removes the legend showing the Filed Name
library(plotly)
gr<-ggplot(soil.24, aes(x=P, fill = FieldName)) +
geom_histogram(binwidth = 5) +
labs(x = "P (mg/L)", y = "Freq") +
ggtitle("Histogram of P (mg/L) in 2024")+
theme_bw()+
theme(legend.position="none")
ggplotly(gr)
summary(soil.24)
soil.traits <- soil.24[,6:9]
rownames(soil.traits)<-soil.24[,1]
soil.mean <- sapply(soil.traits, mean)
round(soil.mean, digits=1)
soil.var <-sapply(soil.traits, var)
round(soil.var, digits=1)
soil.sd <-sapply(soil.traits, sd)
round(soil.sd, digits=1)
soil.rsd <- soil.sd/soil.mean
round(soil.rsd, digits=2)
ggplot(data = soil.24, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
ttest1 <-t.test(filter(soil.24, Field.ID==1)$P, filter(soil.24, Field.ID==6)$P)
print(ttest1)
ttest2 <-t.test(filter(soil.24, Field.ID==1)$K, filter(soil.24, Field.ID==6)$K)
print(ttest2)
pwr.t.test(d=0.8,power = 0.7, sig.level=.05,type = "two.sample", alternative="two.sided")
soil.24.rm <-filter(soil.24, Field.ID!=15 & Field.ID!=16 & Field.ID!=29)
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm)
ggplot(data = soil.24.rm, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
anova(one.anova)
## Draw QQ plot
plot(one.anova, 2)
soil.24.rm1 <-soil.24.rm[-c(21, 230, 234),]
one.anova1 <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm1)
soil.24.rm1 <-soil.24.rm[-c(21, 230, 234),]
one.anova1 <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm1)
anova(one.anova1)
## Draw QQ plot
plot(one.anova1, 2)
shapiro.test(rstandard(one.anova1))
shapiro.test(rstandard(one.anova))
anova(one.anova1)
## Draw QQ plot
plot(one.anova1, 2)
shapiro.test(rstandard(one.anova1))
library(car)
leveneTest(P~as.factor(Field.ID),data=soil.24.rm1)
library(rstatix)
soil.24.rm1 %>% welch_anova_test(P ~ Field.ID)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
anova(welch_anova)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
summmary(welch_anova)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
summary(welch_anova)
library(rstatix)
welch.anova <-oneway.test(P ~ Field.ID, data = soil.24.rm1, var.equal = FALSE)
library(rstatix)
welch.anova <-oneway.test(P ~ Field.ID, data = soil.24.rm1, var.equal = FALSE)
anova(welch.anova)
library(rstatix)
welch.anova <-oneway.test(P ~ Field.ID, data = soil.24.rm1, var.equal = FALSE)
welch.anova
TukeyHSD(welch.anova)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
tukey_hsd(welch_anova)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
tukey_hsd(soil.24.rm1, P ~ Field.ID)
#oneway.test(P ~ Field.ID, data = soil.24.rm1, var.equal = FALSE)
print(n=500)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
print(tukey_hsd(soil.24.rm1, P ~ Field.ID))
#oneway.test(P ~ Field.ID, data = soil.24.rm1, var.equal = FALSE)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
print(tukey_hsd(soil.24.rm1, P ~ Field.ID), n=500)
#oneway.test(P ~ Field.ID, data = soil.24.rm1, var.equal = FALSE)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
print(tukey_hsd(soil.24.rm1, P ~ Field.ID), n=500)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, P ~ Field.ID)
print(tukey_hsd(soil.24.rm1, P ~ Field.ID), n=500)
soil.24.rm1 <-soil.24.rm[-c(21, 230, 234),]
one.anova1 <- aov(P ~ FieldName, data = soil.24.rm1)
anova(one.anova1)
## Draw QQ plot
plot(one.anova1, 2)
shapiro.test(rstandard(one.anova1))
soil.24.rm1 <-soil.24.rm[-c(21, 230, 234),]
one.anova1 <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm1)
anova(one.anova1)
## Draw QQ plot
plot(one.anova1, 2)
shapiro.test(rstandard(one.anova1))
library(car)
leveneTest(log(P, base=10)~as.factor(Field.ID),data=soil.24.rm1)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, log(P, base=10) ~ Field.ID)
print(tukey_hsd(soil.24.rm1, P ~ Field.ID), n=500)
library(rstatix)
welch_anova <-welch_anova_test(soil.24.rm1, log(P, base=10) ~ Field.ID)
print(tukey_hsd(soil.24.rm1, log(P, base=10) ~ Field.ID), n=500)
kruskal.test(soil.24.rm1, P ~ Field.ID)
kruskal.test(P ~ Field.ID, data=soil.24.rm1)
pairwise.wilcox.test(soil.24.rm1$P, soil.24.rm1$Sample.ID,
p.adjust.method = "BH")
pairwise.wilcox.test(soil.24.rm1$P, soil.24.rm1$Field.ID,
p.adjust.method = "BH")
library(tidyverse)
#library(olsrr)
library(car)
library(ggpubr)
library(rstatix)
library(pwr)
# Clear workspace
rm(list=ls())
# Close figures
graphics.off()
#Provide the path to your working directory here (you need to modify the path below)
knitr::opts_knit$set(root.dir ="C:/Users/e102010/OneDrive - Cranfield University/Documents/Bioinformatics_MSc/Teaching/Academic Year 2024-2025/Soils Mastership/Session1_Practicals")
soil.data <- read.csv("Data/Stubton_Farm_Soil.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
#structure(honey.data)
dplyr::glimpse(soil.data)
dplyr::glimpse(soil.data)
soil.data <-soil.data %>% mutate_at(c('FieldName', 'Field.ID'), as.factor)
dplyr::glimpse(soil.data)
knitr::kable(soil.data[1:5,], caption = "Head of Stubton Farm soil data")
# is.na() will return a logical matrix with the value "TRUE" for every "NA" in our dataset, and FALSE for any other value.
# table() will then return how any "TRUE" and "FALSE" we have in our matrix.
na_matrix <- is.na(soil.data)
table(na_matrix)
# This will select rows with complete values:
soil_complete <- soil.data[complete.cases(soil.data), ]
# Alternatively we may want to select the rows with missing values. In this case we can use the sympbol "!" which acts as a negation.  So, the next line will select rows with no complete cases:
soil_missing <- soil.data[!complete.cases(soil.data), ]
knitr::kable(soil_missing, caption = "Rows with missing values from the Vanilla dataset")
#Create a histogram for P
hist(soil_complete$P, main = "Histogram of the P concentration",
xlab = "P (mg/L)", ylab = "Freq", col = "steelblue")
#Order the P soil concentrations in descending order and show the top values:
ordered_P <- soil_complete[order(soil_complete$P, decreasing = TRUE),]
knitr::kable(ordered_P[1:10,], caption = "Highest P concentrations")
#Create a smaller dataframe with only the North, Cow and Grahams fields.
Top.fields<- filter(soil_complete, FieldName=="North Field" | FieldName=="Cow Field" | FieldName=="Grahams Field")
#Create a boxplot
Top.fields%>%
ggplot( aes(x=FieldName, y=P, fill=FieldName)) +
geom_boxplot() +
geom_jitter(color="black", size=0.4, alpha=0.9) +
stat_summary(fun = mean,
geom = "point",
shape = 18,
color = "red",
size = 3) +
theme_bw() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Top P concentration Fields ") +
xlab("")
soil_filtered <- soil_complete[soil_complete$Sample.ID != "S646",]
hist(x = soil_filtered$P, main = "Histogram of the filtered P values",
xlab = "P (mg/L)", ylab = "Freq", col = "steelblue")
if(!require('outliers')) install.packages('outliers'); library('outliers')
grubbs.test(soil_complete$P)
soil.24 <- dplyr::filter(soil_complete, Year==2024)
ggplot(soil.24, aes(x=P, fill = FieldName)) +
geom_histogram(binwidth = 5) +
labs(x = "P (mg/L)", y = "Freq") +
ggtitle("Histogram of P (mg/L) in 2024")+
theme_bw()+
theme(legend.position="none") #This removes the legend showing the Filed Name
soil.24 <- dplyr::filter(soil_complete, Year==2024)
ggplot(soil.24, aes(x=P, fill = FieldName)) +
geom_histogram(binwidth = 5) +
labs(x = "P (mg/L)", y = "Freq") +
ggtitle("Histogram of P (mg/L) in 2024")+
theme_bw()+
theme(legend.position="none") #This removes the legend showing the Filed Name
library(plotly)
gr<-ggplot(soil.24, aes(x=P, fill = FieldName)) +
geom_histogram(binwidth = 5) +
labs(x = "P (mg/L)", y = "Freq") +
ggtitle("Histogram of P (mg/L) in 2024")+
theme_bw()+
theme(legend.position="none")
ggplotly(gr)
summary(soil.24)
soil.traits <- soil.24[,6:9]
rownames(soil.traits)<-soil.24[,1]
soil.mean <- sapply(soil.traits, mean)
round(soil.mean, digits=1)
soil.var <-sapply(soil.traits, var)
round(soil.var, digits=1)
soil.var <-sapply(soil.traits, var)
round(soil.var, digits=1)
soil.sd <-sapply(soil.traits, sd)
round(soil.sd, digits=1)
soil.rsd <- soil.sd/soil.mean
round(soil.rsd, digits=2)
ggplot(data = soil.24, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
ttest1 <-t.test(filter(soil.24, Field.ID==1)$P, filter(soil.24, Field.ID==6)$P)
print(ttest1)
ttest1 <-t.test(filter(soil.24, Field.ID==1)$P, filter(soil.24, Field.ID==6)$P)
print(ttest1)
soil.24.rm <-filter(soil.24, Field.ID!=15 & Field.ID!=16 & Field.ID!=29)
one.anova <- aov(log(P, base = 10) ~ FieldName, data = soil.24.rm)
ggplot(data = soil.24.rm, aes(sample = P)) +
geom_qq() +
stat_qq_line() +
facet_wrap(~ Field.ID,                   # Panel by group
labeller = label_both) +
theme_bw()
anova(one.anova)
